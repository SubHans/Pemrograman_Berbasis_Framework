{"ast":null,"code":"import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from '../Action/actionTypes';\nconst INITIAL_DATA = [];\n\nconst TodoReducer = (state = INITIAL_DATA, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }];\n\n    case TOGGLE_TODO:\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n\n    case REMOVE_TODO:\n      const numIndex = parseInt(action.id);\n      return state.filter(todo => todo.id !== numIndex);\n\n    default:\n      return state;\n  }\n};\n\n_c = TodoReducer;\nexport default TodoReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoReducer\");","map":{"version":3,"sources":["C:/pbf_week6/src/reducers/TodoReducer.js"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_TODO","INITIAL_DATA","TodoReducer","state","action","type","id","text","completed","map","todo","numIndex","parseInt","filter"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,uBAAnD;AACA,MAAMC,YAAY,GAAG,EAArB;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AACI,aAAO,CACH,GAAGK,KADA,EAEH;AACIG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADf;AAEIC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFjB;AAGIC,QAAAA,SAAS,EAAE;AAHf,OAFG,CAAP;;AAQJ,SAAKR,WAAL;AACI,aAAOG,KAAK,CAACM,GAAN,CAAWC,IAAD,IACZA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAApB,GAA0B,EAAC,GAAGI,IAAJ;AAAUF,QAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAA3B,OAA1B,GAAmEE,IADhE,CAAP;;AAGJ,SAAKX,WAAL;AACI,YAAMY,QAAQ,GAAGC,QAAQ,CAACR,MAAM,CAACE,EAAR,CAAzB;AACA,aAAOH,KAAK,CAACU,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYK,QAAnC,CAAP;;AACJ;AACI,aAAOR,KAAP;AAlBR;AAoBH,CArBD;;KAAMD,W;AAsBN,eAAeA,WAAf","sourcesContent":["import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from '../Action/actionTypes';\nconst INITIAL_DATA = [];\nconst TodoReducer = (state = INITIAL_DATA, action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    text: action.text,\n                    completed: false,\n                },\n            ];\n        case TOGGLE_TODO:\n            return state.map((todo) =>\n                (todo.id === action.id) ? {...todo, completed: !todo.completed } : todo\n            );\n        case REMOVE_TODO:\n            const numIndex = parseInt(action.id);\n            return state.filter((todo) => todo.id !== numIndex);\n        default:\n            return state;\n    }\n};\nexport default TodoReducer;"]},"metadata":{},"sourceType":"module"}