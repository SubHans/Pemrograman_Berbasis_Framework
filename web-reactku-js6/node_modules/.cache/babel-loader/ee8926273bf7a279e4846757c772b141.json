{"ast":null,"code":"import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from \"../Action/actionTypes\";\nconst INITIAL_DATA = [];\n\nconst TodoReducer = (state = INITIAL_DATA, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }];\n\n    case TOGGLE_TODO:\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n\n    case REMOVE_TODO:\n      const numIndex = parseInt(action.id);\n      return state.filter(todo => todo.id !== numIndex);\n\n    default:\n      return state;\n  }\n};\n\n_c = TodoReducer;\nexport default TodoReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoReducer\");","map":{"version":3,"sources":["C:/pbf_week6/src/reducers/TodoReducer.js"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_TODO","INITIAL_DATA","TodoReducer","state","action","type","id","text","completed","map","todo","numIndex","parseInt","filter"],"mappings":"AAAA,SAAOA,QAAP,EAAiBC,WAAjB,EAA8BC,WAA9B,QAAgD,uBAAhD;AACA,MAAMC,YAAY,GAAG,EAArB;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAEF,YAAR,EAAsBG,MAAtB,KAA+B;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,QAAL;AACI,aAAM,CACF,GAAGK,KADD,EAEF;AACIG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADf;AAEIC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFjB;AAGIC,QAAAA,SAAS,EAAC;AAHd,OAFE,CAAN;;AAQJ,SAAKR,WAAL;AACI,aAAOG,KAAK,CAACM,GAAN,CAAWC,IAAD,IACbA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAnB,GAAwB,EAAC,GAAGI,IAAJ;AAASF,QAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAA1B,OAAxB,GAA+DE,IAD5D,CAAP;;AAGJ,SAAKX,WAAL;AACI,YAAMY,QAAQ,GAAGC,QAAQ,CAACR,MAAM,CAACE,EAAR,CAAzB;AACA,aAAOH,KAAK,CAACU,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYK,QAAnC,CAAP;;AACJ;AACI,aAAOR,KAAP;AAlBR;AAoBH,CArBD;;KAAMD,W;AAuBN,eAAeA,WAAf","sourcesContent":["import{ADD_TODO, REMOVE_TODO, TOGGLE_TODO} from \"../Action/actionTypes\";\r\nconst INITIAL_DATA = [];\r\nconst TodoReducer = (state= INITIAL_DATA, action)=>{\r\n    switch(action.type){\r\n        case ADD_TODO:\r\n            return[\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    completed:false,\r\n                },\r\n            ];\r\n        case TOGGLE_TODO:\r\n            return state.map((todo)=>\r\n                todo.id === action.id ? {...todo,completed: !todo.completed} : todo\r\n            );\r\n        case REMOVE_TODO:\r\n            const numIndex = parseInt(action.id);\r\n            return state.filter((todo) => todo.id !== numIndex);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default TodoReducer;"]},"metadata":{},"sourceType":"module"}