{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\web-reactku-js12\\\\src\\\\container\\\\BlogPost\\\\Post.jsx\";\nimport React, { Component } from \"react\";\nimport \"./BlogPost.css\";\nimport Post from \"../../component/BlogPost/Post\"; // import API from \"../../services\";\n\nimport firebase from \"firebase\";\nimport firebaseConfig from \"../../firebase/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BlogPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ambilDataDariSeverAPI = () => {\n      // fungsi untuk mengambil data API dari Realtime Database Firebase\n      let ref = firebase.database().ref(\"/\");\n      ref.on(\"value\", snapshot => {\n        const state = snapshot.val();\n        this.setState(state);\n      });\n    };\n\n    this.simpanDataKeServerAPI = () => {\n      // fungsi untuk mengirim/insert data API dari Realtime Database Firebase\n      firebase.database().ref(\"/\").set(this.state);\n    };\n\n    this.handleHapusArtikel = idArtikel => {\n      // fungsi yang meng-handle button action hapus data\n      const {\n        listArtikel\n      } = this.state;\n      const newState = listArtikel.filter(data => {\n        return data.uid !== idArtikel;\n      });\n      this.setState({\n        listArtikel: newState\n      });\n    };\n\n    this.handleTombolSimpan = event => {\n      // fungsi untuk meng-handle saat button action diklik (simpan data)\n      let title = this.refs.judulArtikel.value; // this.refs mengacu pada input field (input text, textarea, number, dll)\n\n      let body = this.refs.isiArtikel.value;\n      let uid = this.refs.uid.value;\n\n      if (uid && title && body) {\n        // cek apakah semua data memiliki nilai (tidak null)\n        const {\n          listArtikel\n        } = this.state;\n        const indeksArtikel = listArtikel.findIndex(data => {\n          return data.uid === uid;\n        });\n        listArtikel[indeksArtikel].title = title;\n        listArtikel[indeksArtikel].body = body;\n        this.setState({\n          listArtikel\n        });\n      } else if (title && body) {\n        // jika data belum di server\n        const uid = new Date().getTime().toString();\n        const {\n          listArtikel\n        } = this.state;\n        listArtikel.push({\n          uid,\n          title,\n          body\n        });\n        this.setState({\n          listArtikel\n        });\n      }\n\n      this.refs.judulArtikel.value = \"\";\n      this.refs.isiArtikel.value = \"\";\n      this.refs.uid.value = \"\";\n    };\n\n    firebase.initializeApp(firebaseConfig); // inisialisasi konfigurasi database firebase\n\n    this.state = {\n      // komponen state dari React untuk statefull component\n      listArtikel: [] // variabel array yang digunakan untuk menyimpan data API\n\n    };\n  }\n\n  componentDidMount() {\n    // komponen untuk mengecek ketika component telah dimounting, maka panggil API\n    this.ambilDataDariSeverAPI(); // ambil data dari server API lokal\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.simpanDataKeServerAPI();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-artikel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form pb-3 border-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-gorup row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"col-sm-2 col-form-label\",\n            children: \"Judul\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"title\",\n              name: \"title\",\n              ref: \"judulArtikel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"body\",\n            className: \"col-sm-2 col-form-label\",\n            children: \"Isi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"body\",\n              id: \"body\",\n              rows: \"3\",\n              className: \"form-control\",\n              ref: \"isiArtikel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"uid\",\n          ref: \"uid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: this.handleTombolSimpan,\n          children: \"Simpan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-2 fw-bolder\",\n        children: \"Daftar Artikel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), this.state.listArtikel.map(artikel => {\n        // looping dan masukkan untuk setiap data yang ada di listArtikel ke variabel artikel\n        return /*#__PURE__*/_jsxDEV(Post, {\n          judul: artikel.title,\n          isi: artikel.body,\n          idArtikel: artikel.uid,\n          hapusArtikel: this.handleHapusArtikel\n        }, artikel.uid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["C:/react/web-reactku-js12/src/container/BlogPost/Post.jsx"],"names":["React","Component","Post","firebase","firebaseConfig","BlogPost","constructor","props","ambilDataDariSeverAPI","ref","database","on","snapshot","state","val","setState","simpanDataKeServerAPI","set","handleHapusArtikel","idArtikel","listArtikel","newState","filter","data","uid","handleTombolSimpan","event","title","refs","judulArtikel","value","body","isiArtikel","indeksArtikel","findIndex","Date","getTime","toString","push","initializeApp","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","artikel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./BlogPost.css\";\nimport Post from \"../../component/BlogPost/Post\";\n// import API from \"../../services\";\nimport firebase from \"firebase\";\nimport firebaseConfig from \"../../firebase/config\";\n\nclass BlogPost extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(firebaseConfig); // inisialisasi konfigurasi database firebase\n\n    this.state = {\n      // komponen state dari React untuk statefull component\n      listArtikel: [], // variabel array yang digunakan untuk menyimpan data API\n    };\n  }\n\n  ambilDataDariSeverAPI = () => {\n    // fungsi untuk mengambil data API dari Realtime Database Firebase\n    let ref = firebase.database().ref(\"/\");\n    ref.on(\"value\", (snapshot) => {\n      const state = snapshot.val();\n      this.setState(state);\n    });\n  };\n\n  simpanDataKeServerAPI = () => {\n    // fungsi untuk mengirim/insert data API dari Realtime Database Firebase\n    firebase.database().ref(\"/\").set(this.state);\n  };\n\n  componentDidMount() {\n    // komponen untuk mengecek ketika component telah dimounting, maka panggil API\n    this.ambilDataDariSeverAPI(); // ambil data dari server API lokal\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.simpanDataKeServerAPI();\n    }\n  }\n\n  handleHapusArtikel = (idArtikel) => {\n    // fungsi yang meng-handle button action hapus data\n    const { listArtikel } = this.state;\n    const newState = listArtikel.filter((data) => {\n      return data.uid !== idArtikel;\n    });\n    this.setState({ listArtikel: newState });\n  };\n\n  handleTombolSimpan = (event) => {\n    // fungsi untuk meng-handle saat button action diklik (simpan data)\n    let title = this.refs.judulArtikel.value; // this.refs mengacu pada input field (input text, textarea, number, dll)\n    let body = this.refs.isiArtikel.value;\n    let uid = this.refs.uid.value;\n\n    if (uid && title && body) {\n      // cek apakah semua data memiliki nilai (tidak null)\n      const { listArtikel } = this.state;\n      const indeksArtikel = listArtikel.findIndex((data) => {\n        return data.uid === uid;\n      });\n      listArtikel[indeksArtikel].title = title;\n      listArtikel[indeksArtikel].body = body;\n      this.setState({ listArtikel });\n    } else if (title && body) {\n      // jika data belum di server\n      const uid = new Date().getTime().toString();\n      const { listArtikel } = this.state;\n      listArtikel.push({ uid, title, body });\n      this.setState({ listArtikel });\n    }\n\n    this.refs.judulArtikel.value = \"\";\n    this.refs.isiArtikel.value = \"\";\n    this.refs.uid.value = \"\";\n  };\n\n  render() {\n    return (\n      <div className=\"post-artikel\">\n        <div className=\"form pb-3 border-bottom\">\n          <div className=\"form-gorup row\">\n            <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">\n              Judul\n            </label>\n            <div className=\"col-sm-10\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                name=\"title\"\n                ref=\"judulArtikel\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group row my-3\">\n            <label htmlFor=\"body\" className=\"col-sm-2 col-form-label\">\n              Isi\n            </label>\n            <div className=\"col-sm-10\">\n              <textarea\n                name=\"body\"\n                id=\"body\"\n                rows=\"3\"\n                className=\"form-control\"\n                ref=\"isiArtikel\"\n              ></textarea>\n            </div>\n          </div>\n          <input type=\"hidden\" name=\"uid\" ref=\"uid\" />\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={this.handleTombolSimpan}\n          >\n            Simpan\n          </button>\n        </div>\n        <h2 className=\"mt-2 fw-bolder\">Daftar Artikel</h2>\n        {this.state.listArtikel.map((artikel) => {\n          // looping dan masukkan untuk setiap data yang ada di listArtikel ke variabel artikel\n          return (\n            <Post\n              key={artikel.uid}\n              judul={artikel.title}\n              isi={artikel.body}\n              idArtikel={artikel.uid}\n              hapusArtikel={this.handleHapusArtikel}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}